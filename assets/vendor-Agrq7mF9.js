class e{events=new Map;on(e,t){this.events.has(e)||this.events.set(e,[]);const i=this.events.get(e);i&&i.push(t)}off(e,t){if(!this.events.has(e))return;const i=this.events.get(e);if(i){const s=i.indexOf(t);-1!==s&&(i.splice(s,1),0===i.length&&this.events.delete(e))}}emit(e,...t){if(!this.events.has(e))return;const i=this.events.get(e);if(i){[...i].forEach((i=>{try{i(...t)}catch(s){console.error(`Error in event handler for ${String(e)}:`,s)}}))}}removeAllListeners(){this.events.clear()}}const t="handwriting_exercises",i="handwriting_settings",s="handwriting_thumbnails";class a extends e{exercises=[];settings={volume:.5,muted:!1};thumbnails={};initialized=!1;async initialize(){if(this.initialized)return Promise.resolve();try{return await this.loadExercises(),await this.loadSettings(),await this.loadThumbnails(),this.initialized=!0,this.emit("storage-initialized"),Promise.resolve()}catch(e){return console.error("Failed to initialize storage manager:",e),Promise.reject(e)}}async loadExercises(){try{const e=localStorage.getItem(t);if(e){const t=JSON.parse(e);this.exercises=t.map((e=>({...e,createdAt:new Date(e.createdAt)}))),this.emit("exercises-loaded",this.exercises)}else this.exercises=[];return Promise.resolve()}catch(e){return console.error("Failed to load exercises:",e),this.exercises=[],Promise.reject(e)}}async loadSettings(){try{const e=localStorage.getItem(i);return e&&(this.settings=JSON.parse(e)),Promise.resolve()}catch(e){return console.error("Failed to load settings:",e),Promise.resolve()}}async loadThumbnails(){try{const e=localStorage.getItem(s);return this.thumbnails=e?JSON.parse(e):{},Promise.resolve()}catch(e){return console.error("Failed to load thumbnails:",e),this.thumbnails={},Promise.resolve()}}getExercises(){return[...this.exercises].sort(((e,t)=>t.createdAt.getTime()-e.createdAt.getTime()))}getExerciseById(e){return this.exercises.find((t=>t.id===e))}async saveExercise(e){try{return this.exercises.push(e),await this.persistExercises(),await this.generateAndSaveThumbnail(e),this.emit("exercise-saved",e),Promise.resolve()}catch(t){return console.error("Failed to save exercise:",t),Promise.reject(t)}}async updateExercise(e){try{const t=this.exercises.findIndex((t=>t.id===e.id));if(-1===t)throw new Error(`Exercise with ID ${e.id} not found`);return this.exercises[t]=e,await this.persistExercises(),e.adultDrawing&&await this.generateAndSaveThumbnail(e),this.emit("exercise-updated",e),Promise.resolve()}catch(t){return console.error("Failed to update exercise:",t),Promise.reject(t)}}async deleteExercise(e){try{const t=this.exercises.findIndex((t=>t.id===e));if(-1===t)throw new Error(`Exercise with ID ${e} not found`);const i=this.exercises.splice(t,1)[0];return await this.persistExercises(),delete this.thumbnails[e],await this.persistThumbnails(),this.emit("exercise-deleted",i),Promise.resolve()}catch(t){return console.error("Failed to delete exercise:",t),Promise.reject(t)}}async saveExerciseResult(e,t){try{const i=this.getExerciseById(e.id);if(!i)throw new Error(`Exercise with ID ${e.id} not found`);const s=!i.highestScore||t.totalScore>i.highestScore.totalScore,a={...i,attempts:e.attempts,highestScore:s?t:i.highestScore};return await this.updateExercise(a),this.emit("exercise-result-saved",{exercise:a,score:t,isHighScore:s}),Promise.resolve()}catch(i){return console.error("Failed to save exercise result:",i),Promise.reject(i)}}async generateAndSaveThumbnail(e){try{const t=await this.generateThumbnail(e.adultDrawing);return this.thumbnails[e.id]=t,await this.persistThumbnails(),Promise.resolve()}catch(t){return console.error("Failed to generate and save thumbnail:",t),Promise.reject(t)}}async generateThumbnail(e){return new Promise(((t,i)=>{try{const i=document.createElement("canvas");i.width=100,i.height=100;const s=i.getContext("2d");if(!s)throw new Error("Could not get canvas context");if(s.fillStyle="#FFFFFF",s.fillRect(0,0,i.width,i.height),0===e.strokes.length)return void t(i.toDataURL("image/png"));let a=Number.MAX_VALUE,r=Number.MIN_VALUE,n=Number.MAX_VALUE,o=Number.MIN_VALUE;for(const t of e.strokes)for(const e of t.points)a=Math.min(a,e.x),r=Math.max(r,e.x),n=Math.min(n,e.y),o=Math.max(o,e.y);const c=r-a,l=o-n;if(0===c||0===l)return void t(i.toDataURL("image/png"));const u=10,h=i.width-2*u,d=i.height-2*u,m=Math.min(h/c,d/l),k=u+(h-c*m)/2,g=u+(d-l*m)/2;for(const t of e.strokes){if(t.points.length<2)continue;s.beginPath(),s.strokeStyle=t.color,s.lineWidth=Math.max(1,t.width*m*.5),s.lineCap="round",s.lineJoin="round";const e=t.points[0],i=k+(e.x-a)*m,r=g+(e.y-n)*m;s.moveTo(i,r);for(let o=1;o<t.points.length;o++){const e=t.points[o],i=k+(e.x-a)*m,r=g+(e.y-n)*m;s.lineTo(i,r)}s.stroke()}t(i.toDataURL("image/png"))}catch(s){i(s)}}))}getThumbnail(e){return this.thumbnails[e]}async saveSettings(e){try{return this.settings={...this.settings,...e},localStorage.setItem(i,JSON.stringify(this.settings)),this.emit("settings-saved",this.settings),Promise.resolve()}catch(t){return console.error("Failed to save settings:",t),Promise.reject(t)}}getSettings(){return{...this.settings}}async persistExercises(){try{return localStorage.setItem(t,JSON.stringify(this.exercises)),Promise.resolve()}catch(e){return console.error("Failed to persist exercises:",e),Promise.reject(e)}}async persistThumbnails(){try{return localStorage.setItem(s,JSON.stringify(this.thumbnails)),Promise.resolve()}catch(e){return console.error("Failed to persist thumbnails:",e),Promise.reject(e)}}}class r extends e{audioContext=null;masterGain=null;activeOscillators=new Map;activeGains=new Map;muted=!1;strokeOscillator=null;strokeGain=null;strokeStartY=null;strokePaused=!1;strokeOscillatorX=null;strokeGainX=null;strokeStartX=null;defaultStrokeYGain=.08;defaultStrokeXGain=.02;async initialize(){try{if(this.audioContext=new AudioContext,this.masterGain=this.audioContext.createGain(),this.masterGain.gain.value=.5,this.masterGain.connect(this.audioContext.destination),"suspended"===this.audioContext.state){const e=async()=>{try{await this.audioContext.resume(),console.log("AudioContext resumed after user interaction")}catch(t){console.error("Failed to resume audio context:",t)}document.removeEventListener("click",e),document.removeEventListener("touchstart",e)};document.addEventListener("click",e,{once:!0}),document.addEventListener("touchstart",e,{once:!0})}return this.emit("audio-initialized"),Promise.resolve()}catch(e){return console.error("Failed to initialize audio manager:",e),Promise.reject(e)}}setVolume(e){if(!this.audioContext||!this.masterGain)return;const t=Math.max(0,Math.min(1,e));this.masterGain.gain.linearRampToValueAtTime(t,this.audioContext.currentTime+.02)}setMuted(e){this.muted=e,this.audioContext&&this.masterGain&&this.masterGain.gain.linearRampToValueAtTime(e?0:.5,this.audioContext.currentTime+.02)}playAttemptCompleteSound(){if(!this.audioContext||this.muted)return;[{frequency:440,type:"sine",duration:.1,gain:.3,envelope:{attack:.01,decay:.05,sustain:.5,release:.1}},{frequency:523.25,type:"sine",duration:.1,gain:.3,envelope:{attack:.01,decay:.05,sustain:.5,release:.1}},{frequency:659.25,type:"sine",duration:.2,gain:.3,envelope:{attack:.01,decay:.1,sustain:.5,release:.2}}].forEach(((e,t)=>{setTimeout((()=>{this.playNote(e,`complete-${t}`)}),100*t)}))}playWelcomeSound(){if(!this.audioContext||this.muted)return;[{frequency:277.18,type:"sine",duration:1,gain:.2,envelope:{attack:.1,decay:.2,sustain:.6,release:.5}},{frequency:349.23,type:"sine",duration:1,gain:.2,envelope:{attack:.15,decay:.2,sustain:.6,release:.5}},{frequency:440,type:"sine",duration:1,gain:.2,envelope:{attack:.2,decay:.2,sustain:.6,release:.5}}].forEach(((e,t)=>{this.playNote(e,`welcome-${t}`)}))}playFanfareSound(){if(!this.audioContext||this.muted)return;const e=[{frequency:440,type:"triangle",duration:.2,gain:.3,envelope:{attack:.01,decay:.1,sustain:.8,release:.1}},{frequency:523.25,type:"triangle",duration:.2,gain:.3,envelope:{attack:.01,decay:.1,sustain:.8,release:.1}},{frequency:659.25,type:"triangle",duration:.2,gain:.3,envelope:{attack:.01,decay:.1,sustain:.8,release:.1}},{frequency:587.33,type:"square",duration:.15,gain:.25,envelope:{attack:.01,decay:.05,sustain:.8,release:.05}},{frequency:587.33,type:"square",duration:.15,gain:.25,envelope:{attack:.01,decay:.05,sustain:.8,release:.05}},{frequency:784,type:"square",duration:.6,gain:.3,envelope:{attack:.01,decay:.3,sustain:.6,release:.3}}],t=e.slice(0,3),i=e.slice(3);t.forEach(((e,t)=>{this.playNote(e,`fanfare-chord-${t}`)}));let s=300;i.forEach(((e,t)=>{setTimeout((()=>{this.playNote(e,`fanfare-melody-${t}`)}),s),s+=1e3*e.duration}))}playStrokeSound(){if(!this.audioContext||this.muted)return;this.playNote({frequency:880,type:"sine",duration:.03,gain:.05,envelope:{attack:.02,decay:.02,sustain:.5,release:.01}},`stroke-${Date.now()}`)}playAttemptStartSound(){if(!this.audioContext||this.muted)return;this.playNote({frequency:659.25,type:"sine",duration:.3,gain:.2,envelope:{attack:.05,decay:.1,sustain:.5,release:.15}},"attempt-start")}playErrorSound(){if(!this.audioContext||this.muted)return;[{frequency:220,type:"sine",duration:.1,gain:.15,envelope:{attack:.01,decay:.05,sustain:.5,release:.05}},{frequency:233.08,type:"sine",duration:.1,gain:.15,envelope:{attack:.01,decay:.05,sustain:.5,release:.05}}].forEach(((e,t)=>{this.playNote(e,`error-${t}`)}))}playStarSound(e){if(!this.audioContext||this.muted)return;const t={frequency:440+110*e,type:"sine",duration:.15,gain:.2,envelope:{attack:.01,decay:.05,sustain:.5,release:.1}};this.playNote(t,`star-${e}`)}playNote(e,t){if(!this.audioContext||!this.masterGain)return;const i=this.audioContext.createOscillator();i.type=e.type,i.frequency.value=e.frequency;const s=this.audioContext.createGain();s.gain.value=0,i.connect(s),s.connect(this.masterGain),this.activeOscillators.set(t,i),this.activeGains.set(t,s);const a=this.audioContext.currentTime,r=e.envelope||{attack:.01,decay:.1,sustain:.8,release:.1};s.gain.setValueAtTime(0,a),s.gain.linearRampToValueAtTime(e.gain,a+r.attack),s.gain.linearRampToValueAtTime(e.gain*r.sustain,a+r.attack+r.decay),i.start(a);const n=a+e.duration;s.gain.linearRampToValueAtTime(0,n+r.release),i.stop(n+r.release),i.onended=()=>{this.activeOscillators.delete(t),this.activeGains.delete(t),i.disconnect(),s.disconnect()}}cleanup(){this.activeOscillators.forEach(((e,t)=>{try{e.stop(),e.disconnect()}catch(i){console.warn(`Failed to stop oscillator ${t}:`,i)}})),this.activeGains.forEach((e=>{try{e.disconnect()}catch(t){console.warn("Failed to disconnect gain node:",t)}})),this.activeOscillators.clear(),this.activeGains.clear(),this.audioContext&&"closed"!==this.audioContext.state&&this.audioContext.close&&this.audioContext.close().catch((e=>{console.error("Failed to close audio context:",e)})),this.audioContext=null,this.masterGain=null}startStrokeSound(e,t){if(this.audioContext&&this.masterGain&&!this.muted&&(this.stopStrokeSound(),this.strokeOscillator=this.audioContext.createOscillator(),this.strokeOscillator.type="sine",this.strokeOscillator.frequency.value=440,this.strokeGain=this.audioContext.createGain(),this.strokeGain.gain.value=0,this.strokeOscillator.connect(this.strokeGain),this.strokeOscillatorX=this.audioContext.createOscillator(),this.strokeOscillatorX.type="triangle",this.strokeOscillatorX.frequency.value=440,this.strokeGainX=this.audioContext.createGain(),this.strokeGainX.gain.value=0,this.strokeOscillatorX.connect(this.strokeGainX),this.strokeGainX.connect(this.masterGain),this.strokeGain.connect(this.masterGain),this.strokeOscillator.start(),this.strokeOscillatorX.start(),this.strokeStartX=e,this.strokeStartY=t,this.strokePaused=!1,this.audioContext)){const e=this.audioContext.currentTime;this.strokeGain.gain.setValueAtTime(0,e),this.strokeGain.gain.linearRampToValueAtTime(this.defaultStrokeYGain,e+.1),this.strokeGainX.gain.setValueAtTime(0,e),this.strokeGainX.gain.linearRampToValueAtTime(this.defaultStrokeXGain,e+.1)}}updateStrokeSound(e,t){if(!this.strokeOscillator||!this.strokeOscillatorX||null===this.strokeStartY||null===this.strokeStartX)return;const i=220+660*((-Math.max(-400,Math.min(400,t-this.strokeStartY))+400)/3200);this.strokeOscillator.frequency.setValueAtTime(i,this.audioContext.currentTime);const s=i+82.5*(Math.max(-800,Math.min(800,e-this.strokeStartX))/800);this.strokeOscillatorX.frequency.setValueAtTime(s,this.audioContext.currentTime)}stopStrokeSound(){if(this.strokeOscillator){try{this.strokeGain&&this.audioContext&&(this.strokeGain.gain.cancelScheduledValues(this.audioContext.currentTime),this.strokeGain.gain.setValueAtTime(this.strokeGain.gain.value,this.audioContext.currentTime),this.strokeGain.gain.linearRampToValueAtTime(0,this.audioContext.currentTime+.1),this.strokeGainX&&(this.strokeGainX.gain.cancelScheduledValues(this.audioContext.currentTime),this.strokeGainX.gain.setValueAtTime(this.strokeGainX.gain.value,this.audioContext.currentTime),this.strokeGainX.gain.linearRampToValueAtTime(0,this.audioContext.currentTime+.1))),this.strokeOscillator.stop(this.audioContext.currentTime+.11),this.strokeOscillatorX&&this.strokeOscillatorX.stop(this.audioContext.currentTime+.11)}catch(e){console.error("Failed to play stroke sound:",e)}this.strokeOscillator.disconnect(),this.strokeGain&&this.strokeGain.disconnect(),this.strokeOscillatorX&&this.strokeOscillatorX.disconnect(),this.strokeGainX&&this.strokeGainX.disconnect()}this.strokeOscillator=null,this.strokeGain=null,this.strokeOscillatorX=null,this.strokeGainX=null,this.strokeStartY=null,this.strokeStartX=null,this.strokePaused=!1}pauseStrokeSound(){this.strokeGain&&!this.strokePaused&&(this.strokeGain.gain.setValueAtTime(0,this.audioContext.currentTime),this.strokeGainX&&this.strokeGainX.gain.setValueAtTime(0,this.audioContext.currentTime),this.strokePaused=!0)}resumeStrokeSound(){this.strokeGain&&this.strokePaused&&(this.strokeGain.gain.setValueAtTime(this.defaultStrokeYGain,this.audioContext.currentTime),this.strokeGainX&&this.strokeGainX.gain.setValueAtTime(this.defaultStrokeXGain,this.audioContext.currentTime),this.strokePaused=!1)}setStrokeYGain(e){const t=Math.max(0,Math.min(1,e));this.defaultStrokeYGain=t,this.strokeGain&&this.audioContext&&this.strokeGain.gain.setValueAtTime(t,this.audioContext.currentTime)}setStrokeXGain(e){const t=Math.max(0,Math.min(1,e));this.defaultStrokeXGain=t,this.strokeGainX&&this.audioContext&&this.strokeGainX.gain.setValueAtTime(t,this.audioContext.currentTime)}}export{r as A,e as E,a as S};
//# sourceMappingURL=vendor-Agrq7mF9.js.map
